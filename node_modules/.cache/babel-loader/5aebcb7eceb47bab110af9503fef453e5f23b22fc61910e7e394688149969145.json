{"ast":null,"code":"var _jsxFileName = \"D:\\\\Longdino\\\\src\\\\Components\\\\Catalogo\\\\Catalog.js\";\nimport React from 'react';\nimport CatalogList from './CatalogList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Catalog = _ref => {\n  let {\n    items\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"const filteredItems = filtro === 'todos' ? items : items.filter(item => item.name.includes(filtro)); return (\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"catalog\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filtro\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setFiltro('todos'),\n          children: \"Todos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setFiltro('AMD'),\n          children: \"AMD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setFiltro('Intel'),\n          children: \"Intel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(CatalogList, {\n        items: filteredItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n};\n_c = Catalog;\nexport default Catalog;\nvar _c;\n$RefreshReg$(_c, \"Catalog\");","map":{"version":3,"names":["React","CatalogList","jsxDEV","_jsxDEV","Fragment","_Fragment","Catalog","_ref","items","children","className","onClick","setFiltro","fileName","_jsxFileName","lineNumber","columnNumber","filteredItems","_c","$RefreshReg$"],"sources":["D:/Longdino/src/Components/Catalogo/Catalog.js"],"sourcesContent":["import React from 'react';\r\nimport CatalogList from './CatalogList';\r\n\r\nconst Catalog = ({ items }) => {\r\n  return (\r\n    <>\r\n    const filteredItems = filtro === 'todos' ? items : items.filter(item => item.name.includes(filtro));\r\n\r\nreturn (\r\n  <div className=\"catalog\">\r\n    <div className=\"filtro\">\r\n      <button onClick={() => setFiltro('todos')}>Todos</button>\r\n      <button onClick={() => setFiltro('AMD')}>AMD</button>\r\n      <button onClick={() => setFiltro('Intel')}>Intel</button>\r\n    </div>\r\n    <CatalogList items={filteredItems} />\r\n  </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Catalog;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,OAAO,GAAGC,IAAA,IAAe;EAAA,IAAd;IAAEC;EAAM,CAAC,GAAAD,IAAA;EACxB,oBACEJ,OAAA,CAAAE,SAAA;IAAAI,QAAA,GAAE,+GAIJ,eAAAN,OAAA;MAAKO,SAAS,EAAC,SAAS;MAAAD,QAAA,gBACtBN,OAAA;QAAKO,SAAS,EAAC,QAAQ;QAAAD,QAAA,gBACrBN,OAAA;UAAQQ,OAAO,EAAEA,CAAA,KAAMC,SAAS,CAAC,OAAO,CAAE;UAAAH,QAAA,EAAC;QAAK;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACzDb,OAAA;UAAQQ,OAAO,EAAEA,CAAA,KAAMC,SAAS,CAAC,KAAK,CAAE;UAAAH,QAAA,EAAC;QAAG;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACrDb,OAAA;UAAQQ,OAAO,EAAEA,CAAA,KAAMC,SAAS,CAAC,OAAO,CAAE;UAAAH,QAAA,EAAC;QAAK;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtD,CAAC,eACNb,OAAA,CAACF,WAAW;QAACO,KAAK,EAAES;MAAc;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAAA,eACF,CAAC;AAEP,CAAC;AAACE,EAAA,GAhBIZ,OAAO;AAkBb,eAAeA,OAAO;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}