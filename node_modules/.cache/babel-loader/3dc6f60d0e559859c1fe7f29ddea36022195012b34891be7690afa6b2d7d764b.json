{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Camssitto\\\\Desktop\\\\Longdino\\\\src\\\\Components\\\\Contact.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Contacts = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isEmailValid, setIsEmailValid] = useState(true);\n  const [isPasswordValid, setIsPasswordValid] = useState(true);\n  const handleEmailChange = event => {\n    const {\n      value\n    } = event.target;\n    setEmail(value);\n    setIsEmailValid(validateEmail(value));\n  };\n  const handlePasswordChange = event => {\n    const {\n      value\n    } = event.target;\n    setPassword(value);\n    setIsPasswordValid(validatePassword(value));\n  };\n  const validateEmail = email => {\n    // Expresión regular para validar el formato del correo\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n  const validatePassword = password => {\n    // Verificar si la longitud de la clave es de al menos 6 dígitos\n    return password.length >= 6;\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    // Validar ambos campos antes de enviar el formulario\n    const isFormValid = validateEmail(email) && validatePassword(password);\n    if (isFormValid) {\n      // Aquí puedes realizar alguna acción con los datos ingresados, como enviarlos a un servidor, por ejemplo.\n      console.log('Datos válidos:', {\n        email,\n        password\n      });\n    } else {\n      console.log('Datos inválidos. Por favor, verifica el correo y la clave.');\n    }\n  };\n};\n_s(Contacts, \"SJhADM8kSM22zZKGvU3OlvzHZDo=\");\n_c = Contacts;\nfunction Contacts2() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Validaci\\xF3n de Correo y Clave en React\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Correo:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: email,\n          onChange: handleEmailChange,\n          style: {\n            borderColor: isEmailValid ? 'green' : 'red'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Clave:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: handlePasswordChange,\n          style: {\n            borderColor: isPasswordValid ? 'green' : 'red'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }, this), !isEmailValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: \"Por favor, ingresa un correo v\\xE1lido.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 29\n    }, this), !isPasswordValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: \"La clave debe tener al menos 6 d\\xEDgitos.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_c2 = Contacts2;\nexport default Contacts;\nvar _c, _c2;\n$RefreshReg$(_c, \"Contacts\");\n$RefreshReg$(_c2, \"Contacts2\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Contacts","_s","email","setEmail","password","setPassword","isEmailValid","setIsEmailValid","isPasswordValid","setIsPasswordValid","handleEmailChange","event","value","target","validateEmail","handlePasswordChange","validatePassword","emailRegex","test","length","handleSubmit","preventDefault","isFormValid","console","log","_c","Contacts2","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","style","borderColor","color","_c2","$RefreshReg$"],"sources":["C:/Users/Camssitto/Desktop/Longdino/src/Components/Contact.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Contacts = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [isEmailValid, setIsEmailValid] = useState(true);\r\n  const [isPasswordValid, setIsPasswordValid] = useState(true);\r\n\r\n  const handleEmailChange = (event) => {\r\n    const { value } = event.target;\r\n    setEmail(value);\r\n    setIsEmailValid(validateEmail(value));\r\n  };\r\n\r\n  const handlePasswordChange = (event) => {\r\n    const { value } = event.target;\r\n    setPassword(value);\r\n    setIsPasswordValid(validatePassword(value));\r\n  };\r\n\r\n  const validateEmail = (email) => {\r\n    // Expresión regular para validar el formato del correo\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  const validatePassword = (password) => {\r\n    // Verificar si la longitud de la clave es de al menos 6 dígitos\r\n    return password.length >= 6;\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    // Validar ambos campos antes de enviar el formulario\r\n    const isFormValid = validateEmail(email) && validatePassword(password);\r\n\r\n    if (isFormValid) {\r\n      // Aquí puedes realizar alguna acción con los datos ingresados, como enviarlos a un servidor, por ejemplo.\r\n      console.log('Datos válidos:', { email, password });\r\n    } else {\r\n      console.log('Datos inválidos. Por favor, verifica el correo y la clave.');\r\n    }\r\n  };\r\n\r\n\r\n};\r\n\r\nfunction Contacts2(){\r\n    return (\r\n        <div>\r\n          <h1>Validación de Correo y Clave en React</h1>\r\n          <form onSubmit={handleSubmit}>\r\n            <div>\r\n              <label>Correo:</label>\r\n              <input\r\n                type=\"text\"\r\n                value={email}\r\n                onChange={handleEmailChange}\r\n                style={{ borderColor: isEmailValid ? 'green' : 'red' }}\r\n              />\r\n            </div>\r\n            <div>\r\n              <label>Clave:</label>\r\n              <input\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={handlePasswordChange}\r\n                style={{ borderColor: isPasswordValid ? 'green' : 'red' }}\r\n              />\r\n            </div>\r\n            <button type=\"submit\">Enviar</button>\r\n          </form>\r\n          {!isEmailValid && <p style={{ color: 'red' }}>Por favor, ingresa un correo válido.</p>}\r\n          {!isPasswordValid && (\r\n            <p style={{ color: 'red' }}>La clave debe tener al menos 6 dígitos.</p>\r\n          )}\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default Contacts;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}